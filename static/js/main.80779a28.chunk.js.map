{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","validSelectedTabId","some","tab","id","className","map","href","onClick","e","event","preventDefault","handleTabClick","title","find","content","App","useState","setSelectedTabId","selectedTab","ReactDOM","render","document","getElementById"],"mappings":"iMAEaA,EAA4B,SAAC,GAInC,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cASMC,EAAqBH,EAAKI,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAOL,KACrDA,EACAD,EAAK,GAAGM,GAEZ,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,GAAD,OACR,oBAEEE,UAAWF,EAAIC,KAAOH,EAAqB,YAAc,GACzD,UAAQ,MAHV,SAKE,mBACEM,KAAI,WAAMJ,EAAIC,IACd,UAAQ,UACRI,QAAS,SAACC,GAAD,OAxBA,SAACN,EAAUO,GAChCA,EAAMC,iBACFR,EAAIC,KAAOL,GACbC,EAAcG,GAqBYS,CAAeT,EAAKM,IAHtC,SAKGN,EAAIU,SATFV,EAAIC,WAgBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,mBACGP,EAAKgB,MAAK,SAACX,GAAD,OAASA,EAAIC,KAAOH,YADjC,aACG,EAAmDc,cClC/CjB,EAAO,CAClB,CAAEM,GAAI,QAASS,MAAO,QAASE,QAAS,eACxC,CAAEX,GAAI,QAASS,MAAO,QAASE,QAAS,eACxC,CAAEX,GAAI,QAASS,MAAO,QAASE,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASnB,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBmB,EAAtB,KAMMC,EAAcrB,EAAKgB,MAAK,SAAAX,GAAG,OAAIA,EAAIC,KAAOL,KAEhD,OACE,sBAAKM,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,0CACsBc,QADtB,IACsBA,OADtB,EACsBA,EAAaN,SAEnC,cAAC,EAAD,CACEf,KAAMA,EACNC,cAAeA,EACfC,cAdkB,SAACmB,GACvBD,EAAiBC,EAAYf,WCdjCgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.80779a28.chunk.js","sourcesContent":["import { Tab, TabsProps } from '../../types';\n\nexport const Tabs: React.FC<TabsProps> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const handleTabClick = (tab: Tab, event: React.MouseEvent) => {\n    event.preventDefault();\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  const validSelectedTabId = tabs.some((tab) => tab.id === selectedTabId)\n    ? selectedTabId\n    : tabs[0].id;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              key={tab.id}\n              className={tab.id === validSelectedTabId ? 'is-active' : ''}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={(e) => handleTabClick(tab, e)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find((tab) => tab.id === validSelectedTabId)?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const handleTabSelect = (selectedTab: Tab) => {\n    setSelectedTabId(selectedTab.id);\n  };\n\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab?.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleTabSelect}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}